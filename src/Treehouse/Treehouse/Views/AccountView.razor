@using TreeHouse.ViewModels
@using TreeHouse.Database.Models
@using TreeHouse.Services

<BSContainer IsFluid="true">
    <BSRow>
        <BSCol MD="auto">
            <h3>@ViewModel.Name</h3>
            <h4>Balance: @($"{ViewModel.Balance:C}")</h4>
        </BSCol>
        <BSCol></BSCol>
        @* <BSCol MD="auto"> *@
        @*     <BSButton Color="Color.Primary">Transfer</BSButton> *@
        @* </BSCol> *@
        <AuthorizeView Policy="@Policies.IsAdmin">
            <Authorized>
                <BSCol MD="auto">
                    <BSButton OnClick="@(() => PaymentModal.Show())" Color="Color.Success">Payment</BSButton>
                    <BSModal @ref="PaymentModal" IsCentered="true" IgnoreClickOnBackdrop="true">
                        <BSModalHeader OnClick="@(() => PaymentModal.Hide())">Payment to @ViewModel.User.FirstName's @ViewModel.Name account</BSModalHeader>
                        <BSModalBody>
                            <BSContainer>
                                <BSRow>
                                    <BSCol>
                                        $<RadzenNumeric TValue="decimal" Placeholder="0.0" Step="1" Min="0" @bind-Value="@ViewModel.Payment" />
                                    </BSCol>
                                </BSRow>
                                <BSRow Class="mt-4">
                                    <BSCol>
                                        <RadzenTextBox Placeholder="Description..." Style="width: 100%" @bind-Value="@ViewModel.PaymentDescription"/>
                                    </BSCol>
                                </BSRow>
                            </BSContainer>
                        </BSModalBody>
                        <BSModalFooter>
                            <BSButton Color="Color.Success" OnClick="@(async () => { await ViewModel.SubmitPayment(); PaymentModal.Hide(); })">Add Payment</BSButton>
                            <BSButton OnClick="@(() => PaymentModal.Hide())" Color="Color.Secondary">Cancel</BSButton>
                        </BSModalFooter>
                    </BSModal>
                </BSCol>
                <BSCol MD="auto">
                    <BSButton OnClick="@(() => ChargeModal.Show())" Color="Color.Danger">Charge</BSButton>
                    <BSModal @ref="ChargeModal" IsCentered="true" IgnoreClickOnBackdrop="true">
                        <BSModalHeader OnClick="@(() => ChargeModal.Hide())">Charge to @ViewModel.User.FirstName's @ViewModel.Name account</BSModalHeader>
                        <BSModalBody>
                            <BSContainer>
                                <BSRow>
                                    <BSCol>
                                        -$<RadzenNumeric TValue="decimal" Placeholder="0.0" Step="1" Min="0" @bind-Value="@ViewModel.Charge" />
                                    </BSCol>
                                </BSRow>
                                <BSRow Class="mt-4">
                                    <BSCol>
                                        <RadzenTextBox Placeholder="Description..." Style="width: 100%" @bind-Value="@ViewModel.ChargeDescription"/>
                                    </BSCol>
                                </BSRow>
                            </BSContainer>
                        </BSModalBody>
                        <BSModalFooter>
                            <BSButton Color="Color.Danger" OnClick="@(async () => { await ViewModel.SubmitCharge(); ChargeModal.Hide(); })">Add Charge</BSButton>
                            <BSButton OnClick="@(() => ChargeModal.Hide())" Color="Color.Secondary">Cancel</BSButton>
                        </BSModalFooter>
                    </BSModal>
                </BSCol>
            </Authorized>
        </AuthorizeView>
    </BSRow>
</BSContainer>

<RadzenGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="10"
            AllowSorting="true" Data="@ViewModel.Transactions" TItem="Transaction" ColumnWidth="200px">
    <Columns>
        <RadzenGridColumn TItem="Transaction" Property="Id" Title="Transaction ID" />
        <RadzenGridColumn TItem="Transaction" Property="Description" Title="Description" />
        <RadzenGridColumn TItem="Transaction" Property="Timestamp" Title="Date">
            <Template Context="data">
                @($"{data.Timestamp:d}")
            </Template>
        </RadzenGridColumn>
        <RadzenGridColumn TItem="Transaction" Property="Amount" Title="Amount">
            <Template Context="data">
                @($"{data.Amount:C}")
            </Template>
        </RadzenGridColumn>
    </Columns>
</RadzenGrid>

@code {

    BSModal PaymentModal { get; set; }
    BSModal ChargeModal { get; set; }

    [Parameter]
    public AccountViewModel ViewModel { get; set; }
}
